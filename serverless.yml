# Read the documentation at https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/
service: symfony

provider:
  name: aws
  # The AWS region in which to deploy (us-east-1 is the default)
  region: eu-west-1
  # The stage of the application, e.g. dev, production, stagingâ€¦ ('dev' is the default)
  stage: prod
  runtime: provided.al2
  environment:
    # Symfony environment variables
    APP_ENV: prod

plugins:
  - ./vendor/bref/bref

functions:
  # This function runs the Symfony website/API
  web:
    handler: public/index.php
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-74-fpm}
    events:
      - httpApi: "*"
    vpc:
      securityGroupIds:
        - sg-5bba6508
      subnetIds:
        - subnet-55ce2b2c
        - subnet-12a15559
        - subnet-a96a4cf3
  # This function let us run console commands in Lambda
  console:
    handler: bin/console
    timeout: 120 # in seconds
    layers:
      - ${bref:layer.php-74} # PHP
      - ${bref:layer.console} # The "console" layer
    vpc:
      securityGroupIds:
        - sg-5bba6508
      subnetIds:
        - subnet-55ce2b2c
        - subnet-12a15559
        - subnet-a96a4cf3
package:
  patterns:
    # Excluded files and folders for deployment
    - "!assets/**"
    - "!public/build/**"
    - "!public/bundles/**"
    - "public/build/manifest.json"
    - "public/build/entrypoint.json"
    #- '!assets/**'
    #- '!node_modules/**'
    #- '!public/build/**'
    #- '!tests/**'
    #- '!var/**'
    # If you want to include files and folders that are part of excluded folders,
    # add them at the end
    - "var/cache/prod/**"
    #- 'public/build/entrypoints.json'
    #- 'public/build/manifest.json'

resources:
  Resources:
    # The S3 bucket that stores the assets
    Assets:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: symfony-prod-assets
    # The policy that makes the bucket publicly readable
    AssetsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref Assets # References the bucket we defined above
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*" # everyone
              Action: "s3:GetObject" # to read
              Resource: !Join ["/", [!GetAtt Assets.Arn, "*"]] # things in the bucket
              # alternatively you can write out Resource: 'arn:aws:s3:::<bucket-name>/*'
	
